#include "movetables.h"
const std::array<std::array<int, 8>, 18> cornerPerm = {{
    {3, 0, 1, 2, 7, 4, 5, 6}, // U (90° clockwise top)
    {1, 2, 3, 0, 5, 6, 7, 4}, // U'
    {2, 3, 0, 1, 6, 7, 4, 5}, // U2
    {0, 1, 2, 3, 5, 6, 7, 4}, // D (90° clockwise bottom)
    {0, 1, 2, 3, 7, 4, 5, 6}, // D'
    {0, 1, 2, 3, 6, 7, 4, 5}, // D2
    {4, 1, 2, 0, 7, 5, 6, 3}, // L
    {3, 1, 2, 7, 0, 5, 6, 4}, // L'
    {7, 1, 2, 4, 3, 5, 6, 0}, // L2
    {0, 5, 2, 3, 4, 6, 7, 1}, // R
    {0, 7, 2, 3, 4, 1, 5, 6}, // R'
    {0, 6, 2, 3, 4, 5, 1, 7}, // R2
    {1, 5, 3, 0, 4, 2, 6, 7}, // F
    {3, 0, 2, 5, 4, 1, 6, 7}, // F'
    {5, 4, 0, 1, 4, 7, 6, 2}, // F2 (slightly unusual but matches orientation changes)
    {0, 1, 7, 4, 5, 6, 3, 2}, // B
    {0, 1, 6, 7, 5, 4, 2, 3}, // B'
    {0, 1, 4, 5, 6, 7, 3, 2}  // B2
}};


const std::array<std::array<int, 8>, 18> cornerOrientDelta = {{
    {0,0,0,0,0,0,0,0}, // U
    {0,0,0,0,0,0,0,0}, // U'
    {0,0,0,0,0,0,0,0}, // U2
    {0,0,0,0,0,0,0,0}, // D
    {0,0,0,0,0,0,0,0}, // D'
    {0,0,0,0,0,0,0,0}, // D2
    {1,0,0,2,1,0,0,2}, // L
    {2,0,0,1,2,0,0,1}, // L'
    {0,0,0,0,0,0,0,0}, // L2
    {0,1,0,0,0,2,0,0}, // R
    {0,2,0,0,0,1,0,0}, // R'
    {0,0,0,0,0,0,0,0}, // R2
    {0,0,1,0,0,0,2,0}, // F
    {0,0,2,0,0,0,1,0}, // F'
    {0,0,0,0,0,0,0,0}, // F2
    {0,0,0,2,0,0,1,2}, // B
    {0,0,0,1,0,0,2,1}, // B'
    {0,0,0,0,0,0,0,0}  // B2
}};


const std::array<std::array<int, 12>, 18> edgePerm = {{
    {3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11}, // U
    {1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11}, // U'
    {2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11}, // U2
    {0, 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10}, // D
    {0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 8}, // D'
    {0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 8, 9}, // D2
    {7, 1, 2, 0, 6, 5, 3, 4, 8, 9, 10, 11}, // L
    {3, 1, 2, 7, 0, 5, 6, 4, 8, 9, 10, 11}, // L'
    {4, 1, 2, 3, 7, 5, 6, 0, 8, 9, 10, 11}, // L2
    {0, 9, 2, 3, 4, 1, 5, 7, 8, 6, 10, 11}, // R
    {0, 5, 2, 3, 4, 9, 1, 7, 8, 6, 10, 11}, // R'
    {0, 6, 2, 3, 4, 7, 1, 5, 8, 9, 10, 11}, // R2
    {0, 1, 7, 3, 8, 5, 2, 4, 6, 9, 10, 11}, // F
    {0, 1, 6, 3, 4, 5, 8, 2, 7, 9, 10, 11}, // F'
    {0, 1, 8, 3, 2, 5, 7, 6, 4, 9, 10, 11}, // F2
    {0, 1, 2, 11, 4, 10, 6, 7, 8, 9, 3, 5}, // B
    {0, 1, 2, 5, 4, 11, 6, 7, 8, 9, 10, 3}, // B'
    {0, 1, 2, 10, 4, 3, 6, 7, 8, 9, 11, 5}  // B2
}};


const std::array<std::array<int, 12>, 18> edgeFlipDelta = {{
    {0,0,0,0,0,0,0,0,0,0,0,0}, // U
    {0,0,0,0,0,0,0,0,0,0,0,0}, // U'
    {0,0,0,0,0,0,0,0,0,0,0,0}, // U2
    {0,0,0,0,0,0,0,0,0,0,0,0}, // D
    {0,0,0,0,0,0,0,0,0,0,0,0}, // D'
    {0,0,0,0,0,0,0,0,0,0,0,0}, // D2
    {0,0,0,0,0,0,0,0,0,0,0,0}, // L
    {0,0,0,0,0,0,0,0,0,0,0,0}, // L'
    {0,0,0,0,0,0,0,0,0,0,0,0}, // L2
    {0,0,0,0,0,0,0,0,0,0,0,0}, // R
    {0,0,0,0,0,0,0,0,0,0,0,0}, // R'
    {0,0,0,0,0,0,0,0,0,0,0,0}, // R2
    {0,0,1,0,0,1,1,0,1,0,0,0}, // F
    {0,0,1,0,0,1,1,0,1,0,0,0}, // F'
    {0,0,0,0,0,0,0,0,0,0,0,0}, // F2
    {0,0,0,1,0,0,1,1,0,0,1,1}, // B
    {0,0,0,1,0,0,1,1,0,0,1,1}, // B'
    {0,0,0,0,0,0,0,0,0,0,0,0}  // B2
}};

const std::array<int, NUM_MOVES> moveInverse = {{
    1,  // U <-> U'
    0,  // U' <-> U
    2,  // U2 is self-inverse
    4,  // D <-> D'
    3,  // D' <-> D
    5,  // D2 self-inverse
    7,  // L <-> L'
    6,  // L' <-> L
    8,  // L2 self-inverse
    10, // R <-> R'
    9,  // R' <-> R
    11, // R2 self-inverse
    13, // F <-> F'
    12, // F' <-> F
    14, // F2 self-inverse
    16, // B <-> B'
    15, // B' <-> B
    17  // B2 self-inverse
}};

const std::array<std::string, NUM_MOVES> moveNames = {{
    "U", "U'", "U2",
    "D", "D'", "D2",
    "L", "L'", "L2",
    "R", "R'", "R2",
    "F", "F'", "F2",
    "B", "B'", "B2"
}};

